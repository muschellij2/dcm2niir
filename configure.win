#!/bin/bash
CXX_STD=CXX11
CC=`${R_HOME}/bin${R_ARCH_BIN}/R.exe CMD config CC`
CXX=`${R_HOME}/bin${R_ARCH_BIN}/R.exe CMD config CXX`

git_url=https://github.com/rordenlab/dcm2niix
git_exe=`${R_HOME}/bin${R_ARCH_BIN}/Rscript.exe -e "x=Sys.which('git'); cat(x)"`
if [ -z "${git_exe}" ]; then
    ${R_HOME}/bin${R_ARCH_BIN}/Rscript.exe -e "if (!requireNamespace('git2r')) install.packages('git2r')"
    str="repo = git2r::clone(\""
    str="${str}${git_url}"
    str="${str}\", local_path = \"./dcm2niix\")"
	${R_HOME}/bin${R_ARCH_BIN}/Rscript.exe -e "${str}"
	cd dcm2niix
else
	git clone $git_url dcm2niix
	cd dcm2niix
fi
rm -rf .git
mkdir build
cd build

cmaker=`${R_HOME}/bin${R_ARCH_BIN}/Rscript.exe -e "x=Sys.which('cmake'); cat(x)"`
if [ -z "${cmaker}" ]; then
    res=`${R_HOME}/bin${R_ARCH_BIN}/Rscript.exe -e "cat(('cmaker' %in% installed.packages())*1)"`
    if [ $res -eq 0 ]; 
    then     
 	    ${R_HOME}/bin${R_ARCH_BIN}/Rscript.exe -e "remotes::install_github('stnava/cmaker')"
    fi
    cmaker=`${R_HOME}/bin${R_ARCH_BIN}/Rscript.exe -e "x=cmaker::cmake()"`
else 
    cmaker="cmake.exe"
fi

echo ${cmaker}

${cmaker} \
    -G "Unix Makefiles" \
 	-DCMAKE_INSTALL_PREFIX:PATH=${R_PACKAGE_DIR} \
    -DCMAKE_SH:BOOL=OFF \
    ../
